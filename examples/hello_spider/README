simple example of using mutantspider tools to build a web page that contains an element
that is handled by some C++ code.

Getting Started:

First thing, in a console window try cd'ing to this directory (the one with this README file
in it) and then execute:

	make run_server
	
If this succeeds it will have compiled the C++ code and built a simple web site that includes
the compiled code.  It will also have launched a simple web server on that site.  You can see
this web page by opening a browser of your choice and going to:

	http://localhost:5103

Basics of how it works:

The index.html file contains a couple of <script> elements, one for hello_spider_boot.js
and the other for mutantspider.js.  mutantspider.js contains the basic logic for checking
whether your browser supports pnacl or not, and then if it does adding a DOM element to
trigger the download of the pnacl version of hello_spider.  If it does not support pnacl
then it adds a DOM element to trigger the download of the javascript version of hello_spider.
hello_spider_boot.js just contains a small piece of code that is called when the DOM finishes
being parsed, and at that point calls the mutantspider support code.

